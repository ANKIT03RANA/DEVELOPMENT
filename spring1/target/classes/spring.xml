<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- bean definitions here -->
    <!-- <bean id="alien" class="com.devspring.Alien" scope="prototype">  We can declare bean for alien class with different ids as well. And all the bean will call constructor of alien class
    
    </bean> -->
    <!-- <bean id="alien" class="com.devspring.Alien" autowire="byName"> Autowiring if id is not mentioned-->
    <bean id="alien" class="com.devspring.Alien" autowire="byName">
        <!-- <constructor-arg/> constructor injection --> 
        <!-- <constructor-arg/> default constructor --> 
        <!-- <constructor-arg value=""/>  parameterised constructor. you have to decalre this wrt number of parameters(i.e if two then declare it two times sequnetially and so on. or you have to mention datatype of parameters of different kind. or go with index(start from 0).or go with name of parameters sequentially,or specify ConstructorPoperties annotation in class with params)-->
        <property name="age" value="23"></property> <!-- Setter Injection-->
        <property name="lap" ref="lap1"></property>
        <!-- <property name="lap" >
            <bean id="lap1" class="com.devspring.Laptop" >  Inner bean Here no need to use ref
            </bean>
        </property> -->
    </bean>
    <!-- <bean id="lap1" class="com.devspring.Laptop" lazy-init="true"> lazy-init will not let spring to create this obj by default-->
    <bean id="lap1" class="com.devspring.Laptop" primary="true"> <!-- primary is for autowiring confusion-->
    </bean>
</beans>
<!-- Scope
1. Singleton-It is default scope. It will not create new object for every new reference call and it will create object by default as well
2. Prototype - It will create new object for every new reference call and it will not create object by default -->